name: Regression Tests
# https://dotnet.microsoft.com/download/dotnet-core
# https://dotnet.microsoft.com/download/dotnet-framework

on:
  push:
    branches: [ master, develop ]
    # paths:
    #   - 'src/*'
    #   - 'test/*'
    #   - '.github/workflows/*'

  pull_request:
    branches: [ master, develop ]

jobs:
  # build:
  #   runs-on: windows-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       path: Container

  #   - name: Cache
  #     id: unity-container
  #     uses: actions/cache@v1
  #     with:
  #       path: '${{ github.workspace }}\Container\src\bin\Release'
  #       key: ${{ github.sha }}

  #   - name: Build
  #     env:
  #       PackageVersion: '0.0.0'
  #     run: dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True Container\src


  # TODO: add net40

  net:
  #   needs: [ Build ]
    strategy:
      matrix:
        # framework: ['net48', 'net47', 'net46', 'net45']
        framework: ['net48']
    runs-on:  windows-latest
    env:
      TargetFramework: ${{ matrix.framework }}

    steps:
    - name: Checkout Container
      uses: actions/checkout@v2
      with:
        path: Container

    - name: Checkout Tests
      uses: actions/checkout@v2
      with:
        repository: 'unitycontainer/specification-tests'
        path: SpecificationTests


    - name: Cache
      id: unity-container
      uses: actions/cache@v1
      with:
        path: '${{ github.workspace }}\Container\src\bin\Release'
        # key: ${{ github.sha }}
        key: '75bec15aa5fdd0f4f89576e35766e39caf509edb'
  
        # dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ github.workspace }}\Specification\src
        # dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ github.workspace }}\Specification\diagnostic
    - name: Build
      run: |
        dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ github.workspace }}\Container\tests\Unity.Tests\Unity.Tests.csproj
        dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ github.workspace }}\Container\tests\Unity.Specification\Unity.Specification.Tests.csproj
        dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ github.workspace }}\Container\tests\Unity.Diagnostic\Unity.Specification.Tests.Diagnostic.csproj

    - name: Test
      run: |
        dotnet test ${{ github.workspace }}\Container\tests\Unity.Tests
        dotnet test ${{ github.workspace }}\Container\tests\Unity.Specification
        dotnet test ${{ github.workspace }}\Container\tests\Unity.Diagnostic


  # core-lts-2:
  #   needs: [ Build ]
  #   strategy:
  #     matrix:
  #       os: [windows-latest, ubuntu-latest]
  #       os: [windows-latest]
  #   runs-on:  ${{ matrix.os }}
  #   env:
  #     TargetFramework: netcoreapp2.1

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       path: Container

  #   - name: Install DotNet
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: '2.1.806'

  #   - name: Cache
  #     id: unity-container
  #     uses: actions/cache@v1
  #     with:
  #       path: '${{ github.workspace }}/Container/src/bin/Release'
  #       key: ${{ github.sha }}

  #   - name: Build
  #     run: dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ github.workspace }}/Container/tests/Unity.Tests/Unity.Tests.csproj

  #   - name: Test
  #     run: dotnet test ${{ github.workspace }}/Container/tests/Unity.Tests


  # core-lts-3:
  #   needs: [ Build ]
  #   strategy:
  #     matrix:
  #       os: [windows-latest, ubuntu-latest, macos-latest]
  #   runs-on:  ${{ matrix.os }}
  #   env:
  #     TargetFramework: netcoreapp3.1

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       path: Container

  #   - name: Install DotNet
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: '3.1.202'

  #   - name: Cache
  #     id: unity-container
  #     uses: actions/cache@v1
  #     with:
  #       path: '${{ github.workspace }}/Container/src/bin/Release'
  #       key: ${{ github.sha }}

  #   - name: Build
  #     run: dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ github.workspace }}/Container/tests/Unity.Tests/Unity.Tests.csproj

  #   - name: Test
  #     run: dotnet test ${{ github.workspace }}/Container/tests/Unity.Tests
